<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xmlns:security="http://www.springframework.org/schema/security"
	  xmlns:webflow="http://www.springframework.org/schema/webflow-config"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/security 
						http://www.springframework.org/schema/security/spring-security.xsd
						http://www.springframework.org/schema/webflow-config
           				http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value = "org.h2.Driver" />
		<property name="url" value = " jdbc:h2:tcp://localhost/~/test" />
		<property name="username" value = "sa" />
		<property name="password" value = "" />	
	</bean>
		
		<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
			<property name="dataSource" ref = "dataSource"></property>
			<property name="hibernateProperties">
				<props> 
					<prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>  <!-- SQL dialect -->
					<prop key="hibernate.hbm2ddl.auto">update</prop>  <!-- Drop and re-create the database schema on startup -->
					<prop key="hibernate.show_sql">true</prop>
					<prop key="hibernate.format_sql">true</prop>
				</props>
			</property>
			
			<property name="packagesToScan">
				<list>
					<value>com.emusicstore</value>
				</list>
			</property>
		</bean>
		
		<bean id="transactionManager" class = "org.springframework.orm.hibernate5.HibernateTransactionManager">
			<property name="sessionFactory" ref = "sessionFactory" />
		</bean>
		 
		<bean id="multipartResolver" class = "org.springframework.web.multipart.commons.CommonsMultipartResolver">
			<property name="maxUploadSize" value = "100000000000" />
		</bean>
		
		
		
	<security:http auto-config="true" use-expressions="true" >
		<security:intercept-url pattern="/login.jsp*" access="IS_AUTHENTICATED_ANONYMOUSLY" />
   		<security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
   		<security:intercept-url pattern="/customer/**" access="hasRole('ROLE_USER')" />
   		<security:form-login
   			login-page = "/login"
   			default-target-url = "/product/productList/"
   			login-processing-url="/j_spring_security_check" 
   			authentication-failure-url="/login?error"
   			username-parameter="username"
   			password-parameter="password" />
   		<security:logout 
   			logout-url="/j_spring_security_logout"
   			invalidate-session="true"
   			logout-success-url="/login?logout" 
   			delete-cookies="JSESSIONID" />
  	</security:http>
  	<!-- we can use this tag authenticateTheUser instead of j_spring_security_check in processing-url -->
  	<!-- has to be done in login page as well -->
  	<security:authentication-manager>
  		<security:authentication-provider>
  			<security:jdbc-user-service data-source-ref="dataSource"
  				authorities-by-username-query="SELECT username, authority FROM authorities WHERE username = ?"
  				users-by-username-query="SELECT username, password,enabled FROM users WHERE username = ?"/>
  		
  		</security:authentication-provider>
  	</security:authentication-manager>
  	
 	
  	<webflow:flow-executor id="flowExecutor" flow-registry = "flowRegistry" />
  	
  	<webflow:flow-registry id="flowRegistry" base-path = "/WEB-INF/flows" >
  		<webflow:flow-location path = "/flows/checkout/checkout-flow.xml" id="checkout" />
  	</webflow:flow-registry>
  	
  	
  	<bean id="flowHandlerMapping" class="org.springframework.webflow.mvc.servlet.FlowHandlerMapping">
 		<property name="flowRegistry" ref = "flowRegistry" />
 		
 	</bean>
  	<bean id = "flowHandlerAdapter" class = "org.springframework.webflow.mvc.servlet.FlowHandlerAdapter">
  		<property name="flowExecutor" ref = "flowExecutor" />
  	</bean>
  	
  	
</beans>

